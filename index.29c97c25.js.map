{"mappings":"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","sources":["node_modules/imask/esm/core/holder.js","node_modules/imask/esm/core/utils.js","node_modules/imask/esm/core/action-details.js","node_modules/imask/esm/controls/input-history.js","node_modules/imask/esm/core/continuous-tail-details.js","node_modules/imask/esm/masked/pattern/cursor.js","node_modules/imask/esm/masked/factory.js","node_modules/imask/esm/controls/mask-element.js","node_modules/imask/esm/controls/html-mask-element.js","node_modules/imask/esm/controls/html-input-mask-element.js","node_modules/imask/esm/controls/html-contenteditable-mask-element.js","node_modules/imask/esm/controls/input.js","node_modules/imask/esm/core/change-details.js","node_modules/imask/esm/masked/base.js","node_modules/imask/esm/masked/pattern/chunk-tail-details.js","node_modules/imask/esm/masked/pattern/fixed-definition.js","node_modules/imask/esm/masked/pattern/input-definition.js","node_modules/imask/esm/masked/regexp.js","node_modules/imask/esm/masked/pattern.js","node_modules/imask/esm/masked/range.js","node_modules/imask/esm/masked/date.js","node_modules/imask/esm/masked/dynamic.js","node_modules/imask/esm/masked/enum.js","node_modules/imask/esm/masked/number.js","node_modules/imask/esm/masked/function.js","node_modules/imask/esm/masked/pipe.js","node_modules/imask/esm/masked/repeat.js","node_modules/imask/esm/index.js","src/js/timer.js","src/js/inputPhoneMask.js","src/js/formHandler.js","src/index.js","src/js/validateOrderForm.js"],"sourcesContent":["/** Applies mask on element */\nfunction IMask(el, opts) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n\nexport { IMask as default };\n","/** Checks if value is string */\nfunction isString(str) {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/** Checks if value is object */\nfunction isObject(obj) {\n  var _obj$constructor;\n  return typeof obj === 'object' && obj != null && (obj == null || (_obj$constructor = obj.constructor) == null ? void 0 : _obj$constructor.name) === 'Object';\n}\nfunction pick(obj, keys) {\n  if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n  return Object.entries(obj).reduce((acc, _ref) => {\n    let [k, v] = _ref;\n    if (keys(v, k)) acc[k] = v;\n    return acc;\n  }, {});\n}\n\n/** Direction */\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT'\n};\n\n/** Direction */\n\nfunction forceDirection(direction) {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nfunction escapeRegExp(str) {\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nfunction objectIncludes(b, a) {\n  if (a === b) return true;\n  const arrA = Array.isArray(a),\n    arrB = Array.isArray(b);\n  let i;\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++) if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n  if (arrA != arrB) return false;\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const dateA = a instanceof Date,\n      dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n    const regexpA = a instanceof RegExp,\n      regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n    const keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = 0; i < keys.length; i++) if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n    return a.toString() === b.toString();\n  }\n  return false;\n}\n\n/** Selection range */\n\nexport { DIRECTION, escapeRegExp, forceDirection, isObject, isString, objectIncludes, pick };\n","import { DIRECTION } from './utils.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n    if (this.insertedCount) {\n      // double check right part\n      while (this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end)) {\n        if (this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end) ++this.oldSelection.end;else ++this.cursorPos;\n      }\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\n\nexport { ActionDetails as default };\n","class InputHistory {\n  constructor() {\n    this.states = [];\n    this.currentIndex = 0;\n  }\n  get currentState() {\n    return this.states[this.currentIndex];\n  }\n  get isEmpty() {\n    return this.states.length === 0;\n  }\n  push(state) {\n    // if current index points before the last element then remove the future\n    if (this.currentIndex < this.states.length - 1) this.states.length = this.currentIndex + 1;\n    this.states.push(state);\n    if (this.states.length > InputHistory.MAX_LENGTH) this.states.shift();\n    this.currentIndex = this.states.length - 1;\n  }\n  go(steps) {\n    this.currentIndex = Math.min(Math.max(this.currentIndex + steps, 0), this.states.length - 1);\n    return this.currentState;\n  }\n  undo() {\n    return this.go(-1);\n  }\n  redo() {\n    return this.go(+1);\n  }\n  clear() {\n    this.states.length = 0;\n    this.currentIndex = 0;\n  }\n}\nInputHistory.MAX_LENGTH = 100;\n\nexport { InputHistory as default };\n","/** Provides details of continuous extracted tail */\nclass ContinuousTailDetails {\n  /** Tail value as string */\n\n  /** Tail start position */\n\n  /** Start position */\n\n  constructor(value, from, stop) {\n    if (value === void 0) {\n      value = '';\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n  toString() {\n    return this.value;\n  }\n  extend(tail) {\n    this.value += String(tail);\n  }\n  appendTo(masked) {\n    return masked.append(this.toString(), {\n      tail: true\n    }).aggregate(masked._appendPlaceholder());\n  }\n  get state() {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop\n    };\n  }\n  set state(state) {\n    Object.assign(this, state);\n  }\n  unshift(beforePos) {\n    if (!this.value.length || beforePos != null && this.from >= beforePos) return '';\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n  shift() {\n    if (!this.value.length) return '';\n    const shiftChar = this.value[this.value.length - 1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n\nexport { ContinuousTailDetails as default };\n","import { DIRECTION } from '../../core/utils.js';\n\nclass PatternCursor {\n  constructor(masked, pos) {\n    this.masked = masked;\n    this._log = [];\n    const {\n      offset,\n      index\n    } = masked._mapPosToBlock(pos) || (pos < 0 ?\n    // first\n    {\n      index: 0,\n      offset: 0\n    } :\n    // last\n    {\n      index: this.masked._blocks.length,\n      offset: 0\n    });\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n  get block() {\n    return this.masked._blocks[this.index];\n  }\n  get pos() {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n  get state() {\n    return {\n      index: this.index,\n      offset: this.offset,\n      ok: this.ok\n    };\n  }\n  set state(s) {\n    Object.assign(this, s);\n  }\n  pushState() {\n    this._log.push(this.state);\n  }\n  popState() {\n    const s = this._log.pop();\n    if (s) this.state = s;\n    return s;\n  }\n  bindBlock() {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.displayValue.length; // TODO this is stupid type error, `block` depends on index that was changed above\n    }\n  }\n  _pushLeft(fn) {\n    this.pushState();\n    for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) == null ? void 0 : _this$block.displayValue.length) || 0) {\n      var _this$block;\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  _pushRight(fn) {\n    this.pushState();\n    for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  pushLeftBeforeFilled() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n  pushLeftBeforeInput() {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushLeftBeforeRequired() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushRightBeforeFilled() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n  pushRightBeforeInput() {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n  pushRightBeforeRequired() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n\nexport { PatternCursor as default };\n","import { isString, isObject, pick } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n// export function maskedClass(mask: string): typeof MaskedPattern;\n// export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n// export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n// export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n// export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass(mask: Masked): typeof Masked;\n// export function maskedClass(mask: typeof Masked): typeof Masked;\n// export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n// export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n\n/** Get Masked class by mask type */\nfunction maskedClass(mask) /* TODO */{\n  if (mask == null) throw new Error('mask property should be defined');\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  if (isString(mask)) return IMask.MaskedPattern;\n  if (mask === Date) return IMask.MaskedDate;\n  if (mask === Number) return IMask.MaskedNumber;\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n  if (mask instanceof Function) return IMask.MaskedFunction;\n  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n  return IMask.Masked;\n}\nfunction normalizeOpts(opts) {\n  if (!opts) throw new Error('Options in not defined');\n  if (IMask.Masked) {\n    if (opts.prototype instanceof IMask.Masked) return {\n      mask: opts\n    };\n\n    /*\n      handle cases like:\n      1) opts = Masked\n      2) opts = { mask: Masked, ...instanceOpts }\n    */\n    const {\n      mask = undefined,\n      ...instanceOpts\n    } = opts instanceof IMask.Masked ? {\n      mask: opts\n    } : isObject(opts) && opts.mask instanceof IMask.Masked ? opts : {};\n    if (mask) {\n      const _mask = mask.mask;\n      return {\n        ...pick(mask, (_, k) => !k.startsWith('_')),\n        mask: mask.constructor,\n        _mask,\n        ...instanceOpts\n      };\n    }\n  }\n  if (!isObject(opts)) return {\n    mask: opts\n  };\n  return {\n    ...opts\n  };\n}\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n// From masked\n// export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n// // From masked class\n// export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// // From mask opts\n// export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n/** Creates new {@link Masked} depending on mask type */\nfunction createMask(opts) {\n  if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n  const nOpts = normalizeOpts(opts);\n  const MaskedClass = maskedClass(nOpts.mask);\n  if (!MaskedClass) throw new Error(\"Masked class is not found for provided mask \" + nOpts.mask + \", appropriate module needs to be imported manually before creating mask.\");\n  if (nOpts.mask === MaskedClass) delete nOpts.mask;\n  if (nOpts._mask) {\n    nOpts.mask = nOpts._mask;\n    delete nOpts._mask;\n  }\n  return new MaskedClass(nOpts);\n}\nIMask.createMask = createMask;\n\nexport { createMask as default, maskedClass, normalizeOpts };\n","import IMask from '../core/holder.js';\n\n/**  Generic element API to use with mask */\nclass MaskElement {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Safely returns selection start */\n  get selectionStart() {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch {}\n    return start != null ? start : this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd() {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch {}\n    return end != null ? end : this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select(start, end) {\n    if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n    try {\n      this._unsafeSelect(start, end);\n    } catch {}\n  }\n\n  /** */\n  get isActive() {\n    return false;\n  }\n  /** */\n\n  /** */\n\n  /** */\n}\nIMask.MaskElement = MaskElement;\n\nexport { MaskElement as default };\n","import MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\nconst KEY_Z = 90;\nconst KEY_Y = 89;\n\n/** Bridge between HTMLElement and {@link Masked} */\nclass HTMLMaskElement extends MaskElement {\n  /** HTMLElement to use mask on */\n\n  constructor(input) {\n    super();\n    this.input = input;\n    this._onKeydown = this._onKeydown.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onBeforeinput = this._onBeforeinput.bind(this);\n    this._onCompositionEnd = this._onCompositionEnd.bind(this);\n  }\n  get rootElement() {\n    var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n    return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) == null ? void 0 : _this$input$getRootNo2.call(_this$input)) != null ? _this$input$getRootNo : document;\n  }\n\n  /** Is element in focus */\n  get isActive() {\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /** Binds HTMLElement events to mask internal events */\n  bindEvents(handlers) {\n    this.input.addEventListener('keydown', this._onKeydown);\n    this.input.addEventListener('input', this._onInput);\n    this.input.addEventListener('beforeinput', this._onBeforeinput);\n    this.input.addEventListener('compositionend', this._onCompositionEnd);\n    this.input.addEventListener('drop', handlers.drop);\n    this.input.addEventListener('click', handlers.click);\n    this.input.addEventListener('focus', handlers.focus);\n    this.input.addEventListener('blur', handlers.commit);\n    this._handlers = handlers;\n  }\n  _onKeydown(e) {\n    if (this._handlers.redo && (e.keyCode === KEY_Z && e.shiftKey && (e.metaKey || e.ctrlKey) || e.keyCode === KEY_Y && e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n    if (this._handlers.undo && e.keyCode === KEY_Z && (e.metaKey || e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (!e.isComposing) this._handlers.selectionChange(e);\n  }\n  _onBeforeinput(e) {\n    if (e.inputType === 'historyUndo' && this._handlers.undo) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (e.inputType === 'historyRedo' && this._handlers.redo) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n  }\n  _onCompositionEnd(e) {\n    this._handlers.input(e);\n  }\n  _onInput(e) {\n    if (!e.isComposing) this._handlers.input(e);\n  }\n\n  /** Unbinds HTMLElement events to mask internal events */\n  unbindEvents() {\n    this.input.removeEventListener('keydown', this._onKeydown);\n    this.input.removeEventListener('input', this._onInput);\n    this.input.removeEventListener('beforeinput', this._onBeforeinput);\n    this.input.removeEventListener('compositionend', this._onCompositionEnd);\n    this.input.removeEventListener('drop', this._handlers.drop);\n    this.input.removeEventListener('click', this._handlers.click);\n    this.input.removeEventListener('focus', this._handlers.focus);\n    this.input.removeEventListener('blur', this._handlers.commit);\n    this._handlers = {};\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\n/** Bridge between InputElement and {@link Masked} */\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n\n  constructor(input) {\n    super(input);\n    this.input = input;\n  }\n\n  /** Returns InputElement selection start */\n  get _unsafeSelectionStart() {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  get _unsafeSelectionEnd() {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect(start, end) {\n    this.input.setSelectionRange(start, end);\n  }\n  get value() {\n    return this.input.value;\n  }\n  set value(value) {\n    this.input.value = value;\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLInputMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /** Returns HTMLElement selection start */\n  get _unsafeSelectionStart() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Returns HTMLElement selection end */\n  get _unsafeSelectionEnd() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Sets HTMLElement selection */\n  _unsafeSelect(start, end) {\n    if (!this.rootElement.createRange) return;\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /** HTMLElement value */\n  get value() {\n    return this.input.textContent || '';\n  }\n  set value(value) {\n    this.input.textContent = value;\n  }\n}\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n\nexport { HTMLContenteditableMaskElement as default };\n","import { DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLInputMaskElement from './html-input-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport InputHistory from './input-history.js';\nimport './html-mask-element.js';\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n  */\n\n  /** Internal {@link Masked} model */\n\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLInputMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._rawInputValue = '';\n    this.history = new InputHistory();\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onUndo = this._onUndo.bind(this);\n    this._onRedo = this._onRedo.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n  maskEquals(mask) {\n    var _this$masked;\n    return mask == null || ((_this$masked = this.masked) == null ? void 0 : _this$masked.maskEquals(mask));\n  }\n\n  /** Masked */\n  get mask() {\n    return this.masked.mask;\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      // TODO \"any\" no idea\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = mask instanceof IMask.Masked ? mask : createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl('auto');\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl('auto');\n  }\n\n  /** Raw input value */\n  get rawInputValue() {\n    return this._rawInputValue;\n  }\n  set rawInputValue(str) {\n    if (this.rawInputValue === str) return;\n    this.masked.rawInputValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl('auto');\n  }\n\n  /** Display value */\n  get displayValue() {\n    return this.masked.displayValue;\n  }\n\n  /** Starts listening to element events */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n      undo: this._onUndo,\n      redo: this._onRedo\n    });\n  }\n\n  /** Stops listening to element events */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /** Fires custom event */\n  _fireEvent(ev, e) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(e));\n  }\n\n  /** Current selection start */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /** Stores current selection */\n  _saveSelection( /* ev */\n  ) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n    this._unmaskedValue = this.masked.unmaskedValue;\n    this._rawInputValue = this.masked.rawInputValue;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl(cursorPos) {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newRawInputValue = this.masked.rawInputValue;\n    const newDisplayValue = this.displayValue;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue || this._rawInputValue !== newRawInputValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    this._rawInputValue = newRawInputValue;\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (cursorPos === 'auto') this.alignCursor();else if (cursorPos != null) this.cursorPos = cursorPos;\n    if (isChanged) this._fireChangeEvents();\n    if (!this._historyChanging && (isChanged || this.history.isEmpty)) this.history.push({\n      unmaskedValue: newUnmaskedValue,\n      selection: {\n        start: this.selectionStart,\n        end: this.cursorPos\n      }\n    });\n  }\n\n  /** Updates options with deep equal check, recreates {@link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n      mask,\n      ...restOpts\n    } = opts; // TODO types, yes, mask is optional\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = this.masked.optionsIsChanged(restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts); // TODO\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /** Delays cursor update to support mobile browsers */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /** Fires custom events */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /** Aborts delayed cursor update */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n    const details = new ActionDetails({\n      // new state\n      value: this.el.value,\n      cursorPos: this.cursorPos,\n      // old state\n      oldValue: this.displayValue,\n      oldSelection: this._selection\n    });\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.displayValue !== this.el.value) this.updateValue();\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n  _onUndo() {\n    this._applyHistoryState(this.history.undo());\n  }\n  _onRedo() {\n    this._applyHistoryState(this.history.redo());\n  }\n  _applyHistoryState(state) {\n    if (!state) return;\n    this._historyChanging = true;\n    this.unmaskedValue = state.unmaskedValue;\n    this.el.select(state.selection.start, state.selection.end);\n    this._saveSelection();\n    this._historyChanging = false;\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    this._listeners.length = 0;\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\n\nexport { InputMask as default };\n","import IMask from './holder.js';\n\n/** Provides details of changing model value */\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  /** Can skip chars */\n\n  static normalize(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n  }\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      tailShift: 0,\n      skip: false\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate(details) {\n    this.inserted += details.inserted;\n    this.rawInserted += details.rawInserted;\n    this.tailShift += details.tailShift;\n    this.skip = this.skip || details.skip;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n  get consumed() {\n    return Boolean(this.rawInserted) || this.skip;\n  }\n  equals(details) {\n    return this.inserted === details.inserted && this.tailShift === details.tailShift && this.rawInserted === details.rawInserted && this.skip === details.skip;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\n\nexport { ChangeDetails as default };\n","import ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { isString, DIRECTION, objectIncludes, forceDirection } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n/** Append flags */\n\n/** Extract flags */\n\n// see https://github.com/microsoft/TypeScript/issues/6223\n\n/** Provides common masking stuff */\nclass Masked {\n  /** */\n\n  /** */\n\n  /** Transforms value before mask processing */\n\n  /** Transforms each char before mask processing */\n\n  /** Validates if value is acceptable */\n\n  /** Does additional processing at the end of editing */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts\n    });\n    this._initialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions(opts) {\n    if (!this.optionsIsChanged(opts)) return;\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /** Sets new options */\n  _update(opts) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset() {\n    this._value = '';\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.resolve(value, {\n      input: true\n    });\n  }\n\n  /** Resolve new value */\n  resolve(value, flags) {\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n  }\n  get unmaskedValue() {\n    return this.value;\n  }\n  set unmaskedValue(value) {\n    this.resolve(value, {});\n  }\n  get typedValue() {\n    return this.parse ? this.parse(this.value, this) : this.unmaskedValue;\n  }\n  set typedValue(value) {\n    if (this.format) {\n      this.value = this.format(value, this);\n    } else {\n      this.unmaskedValue = String(value);\n    }\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue() {\n    return this.extractInput(0, this.displayValue.length, {\n      raw: true\n    });\n  }\n  set rawInputValue(value) {\n    this.resolve(value, {\n      raw: true\n    });\n  }\n  get displayValue() {\n    return this.value;\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos(cursorPos, direction) {\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return Math.min(this.displayValue.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return this.displayValue.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw(ch, flags) {\n    if (!ch) return new ChangeDetails();\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch\n    });\n  }\n\n  /** Appends char */\n  _appendChar(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const consistentState = this.state;\n    let details;\n    [ch, details] = this.doPrepareChar(ch, flags);\n    if (ch) {\n      details = details.aggregate(this._appendCharRaw(ch, flags));\n\n      // TODO handle `skip`?\n\n      // try `autofix` lookahead\n      if (!details.rawInserted && this.autofix === 'pad') {\n        const noFixState = this.state;\n        this.state = consistentState;\n        let fixDetails = this.pad(flags);\n        const chDetails = this._appendCharRaw(ch, flags);\n        fixDetails = fixDetails.aggregate(chDetails);\n\n        // if fix was applied or\n        // if details are equal use skip restoring state optimization\n        if (chDetails.rawInserted || fixDetails.equals(details)) {\n          details = fixDetails;\n        } else {\n          this.state = noFixState;\n        }\n      }\n    }\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.unshift(this.displayValue.length - details.tailShift);\n          }\n        }\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted.length === checkTail.toString().length;\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.shift();\n          }\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted.length === checkTail.toString().length;\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at the end */\n  _appendPlaceholder() {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at the end */\n  _appendEager() {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  append(str, flags, tail) {\n    if (!isString(str)) throw new Error('value should be string');\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags != null && flags.tail) flags._beforeTailState = this.state;\n    let details;\n    [str, details] = this.doPrepare(str, flags);\n    for (let ci = 0; ci < str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n    if ((this.eager === true || this.eager === 'append') && flags != null && flags.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n    return details;\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    this._value = this.displayValue.slice(0, fromPos) + this.displayValue.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh(fn) {\n    if (this._refreshing || !this._initialized) return fn();\n    this._refreshing = true;\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n    const ret = fn();\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at the end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.displayValue.length), {}, '');\n      this.doCommit();\n    }\n    delete this._refreshing;\n    return ret;\n  }\n  runIsolated(fn) {\n    if (this._isolated || !this._initialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n    const ret = fn(this);\n    this.state = state;\n    delete this._isolated;\n    return ret;\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    return Boolean(this.skipInvalid);\n  }\n\n  /** Prepares string before mask processing */\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepare ? this.prepare(str, this, flags) : str);\n  }\n\n  /** Prepares each char before mask processing */\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepareChar ? this.prepareChar(str, this, flags) : str);\n  }\n\n  /** Validates if value is acceptable */\n  doValidate(flags) {\n    return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /** Does additional processing at the end of editing */\n  doCommit() {\n    if (this.commit) this.commit(this.value, this);\n  }\n  splice(start, deleteCount, inserted, removeDirection, flags) {\n    if (inserted === void 0) {\n      inserted = '';\n    }\n    if (removeDirection === void 0) {\n      removeDirection = DIRECTION.NONE;\n    }\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    const tailPos = start + deleteCount;\n    const tail = this.extractTail(tailPos);\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n    let oldRawValue;\n    if (eagerRemove) {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {\n        raw: true\n      });\n    }\n    let startChangePos = start;\n    const details = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !eagerRemove ? DIRECTION.NONE : removeDirection);\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n    details.aggregate(this.remove(startChangePos));\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.displayValue.length)) {\n          details.aggregate(new ChangeDetails({\n            tailShift: -1\n          })).aggregate(this.remove(valLength - 1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n  maskEquals(mask) {\n    return this.mask === mask;\n  }\n  optionsIsChanged(opts) {\n    return !objectIncludes(this, opts);\n  }\n  typedValueEquals(value) {\n    const tval = this.typedValue;\n    return value === tval || Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) || (this.format ? this.format(value, this) === this.format(this.typedValue, this) : false);\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nMasked.DEFAULTS = {\n  skipInvalid: true\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\nIMask.Masked = Masked;\n\nexport { Masked as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\nclass ChunksTailDetails {\n  /** */\n\n  constructor(chunks, from) {\n    if (chunks === void 0) {\n      chunks = [];\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.chunks = chunks;\n    this.from = from;\n  }\n  toString() {\n    return this.chunks.map(String).join('');\n  }\n  extend(tailChunk) {\n    if (!String(tailChunk)) return;\n    tailChunk = isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk;\n    const lastChunk = this.chunks[this.chunks.length - 1];\n    const extendLast = lastChunk && (\n    // if stops are same or tail has no stop\n    lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n    // if tail chunk goes just after last chunk\n    tailChunk.from === lastChunk.from + lastChunk.toString().length;\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift(); // not possible to be `undefined` because length was checked above\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n  appendTo(masked) {\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n    const details = new ChangeDetails();\n    for (let ci = 0; ci < this.chunks.length; ++ci) {\n      const chunk = this.chunks[ci];\n      const lastBlockIter = masked._mapPosToBlock(masked.displayValue.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null && (\n      // if block not found or stop is behind lastBlock\n      !lastBlockIter || lastBlockIter.index <= stop)) {\n        if (chunk instanceof ChunksTailDetails ||\n        // for continuous block also check if stop is exist\n        masked._stops.indexOf(stop) >= 0) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        details.aggregate(tailDetails);\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, {\n          tail: true\n        }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), {\n          tail: true\n        }));\n      }\n    }\n    return details;\n  }\n  get state() {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex\n    };\n  }\n  set state(state) {\n    const {\n      chunks,\n      ...props\n    } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails();\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n  unshift(beforePos) {\n    if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci = 0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n  shift() {\n    if (!this.chunks.length) return '';\n    let ci = this.chunks.length - 1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n}\n\nexport { ChunksTailDetails as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport '../../core/holder.js';\n\nclass PatternFixedDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n  get value() {\n    return this._value;\n  }\n  get unmaskedValue() {\n    return this.isUnmasking ? this.value : '';\n  }\n  get rawInputValue() {\n    return this._isRawInput ? this.value : '';\n  }\n  get displayValue() {\n    return this.value;\n  }\n  reset() {\n    this._isRawInput = false;\n    this._value = '';\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n    return new ChangeDetails();\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this._value.length;\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    return this._isRawInput ? toPos - fromPos : 0;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return Boolean(this._value);\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const appendEager = this.eager === true || this.eager === 'append';\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    const details = new ChangeDetails({\n      inserted: this.char,\n      rawInserted: isResolved ? this.char : ''\n    });\n    this._value = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n    return details;\n  }\n  _appendEager() {\n    return this._appendChar(this.char, {\n      tail: true\n    });\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    this._value = details.inserted = this.char;\n    return details;\n  }\n  extractTail() {\n    return new ContinuousTailDetails('');\n  }\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n  append(str, flags, tail) {\n    const details = this._appendChar(str[0], flags);\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n    return details;\n  }\n  doCommit() {}\n  get state() {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n  pad(flags) {\n    return this._appendPlaceholder();\n  }\n}\n\nexport { PatternFixedDefinition as default };\n","import createMask from '../factory.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION } from '../../core/utils.js';\nimport '../../core/holder.js';\n\nclass PatternInputDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    const {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager,\n      ...maskOpts\n    } = opts;\n    this.masked = createMask(maskOpts);\n    Object.assign(this, {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager\n    });\n  }\n  reset() {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n    return new ChangeDetails();\n  }\n  get value() {\n    return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');\n  }\n  get unmaskedValue() {\n    return this.masked.unmaskedValue;\n  }\n  get rawInputValue() {\n    return this.masked.rawInputValue;\n  }\n  get displayValue() {\n    return this.masked.value && this.displayChar || this.value;\n  }\n  get isComplete() {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const state = this.masked.state;\n    // simulate input\n    let details = this.masked._appendChar(ch, this.currentMaskFlags(flags));\n    if (details.inserted && this.doValidate(flags) === false) {\n      details = new ChangeDetails();\n      this.masked.state = state;\n    }\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n    return details;\n  }\n  append(str, flags, tail) {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(str, this.currentMaskFlags(flags), tail);\n  }\n  _appendPlaceholder() {\n    if (this.isFilled || this.isOptional) return new ChangeDetails();\n    this.isFilled = true;\n    return new ChangeDetails({\n      inserted: this.placeholderChar\n    });\n  }\n  _appendEager() {\n    return new ChangeDetails();\n  }\n  extractTail(fromPos, toPos) {\n    return this.masked.extractTail(fromPos, toPos);\n  }\n  appendTail(tail) {\n    return this.masked.appendTail(tail);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default:\n        return boundPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.value.slice(fromPos, toPos).length;\n  }\n  doValidate(flags) {\n    return this.masked.doValidate(this.currentMaskFlags(flags)) && (!this.parent || this.parent.doValidate(this.currentMaskFlags(flags)));\n  }\n  doCommit() {\n    this.masked.doCommit();\n  }\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n      masked: this.masked.state,\n      isFilled: this.isFilled\n    };\n  }\n  set state(state) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta;\n    return {\n      ...flags,\n      _beforeTailState: (flags == null || (_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.masked) || (flags == null ? void 0 : flags._beforeTailState)\n    };\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nPatternInputDefinition.DEFAULT_DEFINITIONS = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\nexport { PatternInputDefinition as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by RegExp */\nclass MaskedRegExp extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const mask = opts.mask;\n    if (mask) opts.validate = value => value.search(mask) >= 0;\n    super._update(opts);\n  }\n}\nIMask.MaskedRegExp = MaskedRegExp;\n\nexport { MaskedRegExp as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport { DIRECTION } from '../core/utils.js';\nimport Masked from './base.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport PatternCursor from './pattern/cursor.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport PatternInputDefinition from './pattern/input-definition.js';\nimport './regexp.js';\nimport '../core/continuous-tail-details.js';\n\n/** Pattern mask */\nclass MaskedPattern extends Masked {\n  /** */\n\n  /** */\n\n  /** Single char for empty input */\n\n  /** Single char for filled input */\n\n  /** Show placeholder only when needed */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n      definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts == null ? void 0 : opts.definitions)\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n  _rebuildMask() {\n    const defs = this.definitions;\n    this._blocks = [];\n    this.exposeBlock = undefined;\n    this._stops = [];\n    this._maskedBlocks = {};\n    const pattern = this.mask;\n    if (!pattern || !defs) return;\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n    for (let i = 0; i < pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          const {\n            expose,\n            repeat,\n            ...bOpts\n          } = normalizeOpts(this.blocks[bName]); // TODO type Opts<Arg & Extra>\n          const blockOpts = {\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            autofix: this.autofix,\n            ...bOpts,\n            repeat,\n            parent: this\n          };\n          const maskedBlock = repeat != null ? new IMask.RepeatBlock(blockOpts /* TODO */) : createMask(blockOpts);\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n            if (expose) this.exposeBlock = maskedBlock;\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n          i += bName.length - 1;\n          continue;\n        }\n      }\n      let char = pattern[i];\n      let isInput = (char in defs);\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n      const def = isInput ? new PatternInputDefinition({\n        isOptional: optionalBlock,\n        lazy: this.lazy,\n        eager: this.eager,\n        placeholderChar: this.placeholderChar,\n        displayChar: this.displayChar,\n        ...normalizeOpts(defs[char]),\n        parent: this\n      }) : new PatternFixedDefinition({\n        char,\n        eager: this.eager,\n        isUnmasking: unmaskingBlock\n      });\n      this._blocks.push(def);\n    }\n  }\n  get state() {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state)\n    };\n  }\n  set state(state) {\n    if (!state) {\n      this.reset();\n      return;\n    }\n    const {\n      _blocks,\n      ...maskedState\n    } = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n  reset() {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n  get isComplete() {\n    return this.exposeBlock ? this.exposeBlock.isComplete : this._blocks.every(b => b.isComplete);\n  }\n  get isFilled() {\n    return this._blocks.every(b => b.isFilled);\n  }\n  get isFixed() {\n    return this._blocks.every(b => b.isFixed);\n  }\n  get isOptional() {\n    return this._blocks.every(b => b.isOptional);\n  }\n  doCommit() {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n  get unmaskedValue() {\n    return this.exposeBlock ? this.exposeBlock.unmaskedValue : this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.unmaskedValue = unmaskedValue;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get value() {\n    return this.exposeBlock ? this.exposeBlock.value :\n    // TODO return _value when not in change?\n    this._blocks.reduce((str, b) => str += b.value, '');\n  }\n  set value(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.value = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.value = value;\n  }\n  get typedValue() {\n    return this.exposeBlock ? this.exposeBlock.typedValue : super.typedValue;\n  }\n  set typedValue(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.typedValue = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.typedValue = value;\n  }\n  get displayValue() {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n  appendTail(tail) {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n  _appendEager() {\n    var _this$_mapPosToBlock;\n    const details = new ChangeDetails();\n    let startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n    for (let bi = startBlockIndex; bi < this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n      details.aggregate(d);\n    }\n    return details;\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const blockIter = this._mapPosToBlock(this.displayValue.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n    for (let bi = blockIter.index, block; block = this._blocks[bi]; ++bi) {\n      var _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n      chunkTail.extend(blockChunk);\n    });\n    return chunkTail;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (fromPos === toPos) return '';\n    let input = '';\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n    return input;\n  }\n  _findStopBefore(blockIndex) {\n    let stopBefore;\n    for (let si = 0; si < this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder(toBlockIndex) {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n    const startBlockIter = this._mapPosToBlock(this.displayValue.length);\n    if (!startBlockIter) return details;\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n    this._blocks.slice(startBlockIndex, endBlockIndex).forEach(b => {\n      if (!b.lazy || toBlockIndex != null) {\n        var _blocks2;\n        details.aggregate(b._appendPlaceholder((_blocks2 = b._blocks) == null ? void 0 : _blocks2.length));\n      }\n    });\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock(pos) {\n    let accVal = '';\n    for (let bi = 0; bi < this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n      accVal += block.displayValue;\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos\n        };\n      }\n    }\n  }\n  _blockStartPos(blockIndex) {\n    return this._blocks.slice(0, blockIndex).reduce((pos, b) => pos += b.displayValue.length, 0);\n  }\n  _forEachBlocksInRange(fromPos, toPos, fn) {\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].displayValue.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].displayValue.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.displayValue.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return 0;\n    }\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.displayValue.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock(name) {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks(name) {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    this._forEachBlocksInRange(0, this.displayValue.length, b => details.aggregate(b.pad(flags)));\n    return details;\n  }\n}\nMaskedPattern.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\nIMask.MaskedPattern = MaskedPattern;\n\nexport { MaskedPattern as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which accepts ranges */\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n\n  /** Min bound */\n\n  /** Max bound */\n\n  get _matchFrom() {\n    return this.maxLength - String(this.from).length;\n  }\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      to = this.to || 0,\n      from = this.from || 0,\n      maxLength = this.maxLength || 0,\n      autofix = this.autofix,\n      ...patternOpts\n    } = opts;\n    this.to = to;\n    this.from = from;\n    this.maxLength = Math.max(String(to).length, maxLength);\n    this.autofix = autofix;\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n    super._update(patternOpts);\n  }\n  get isComplete() {\n    return super.isComplete && Boolean(this.value);\n  }\n  boundaries(str) {\n    let minstr = '';\n    let maxstr = '';\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n    return [minstr, maxstr];\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let details;\n    [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n    if (!ch) details.skip = !this.isComplete;\n    return [ch, details];\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (!this.autofix || this.value.length + 1 > this.maxLength) return super._appendCharRaw(ch, flags);\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    const [minstr, maxstr] = this.boundaries(this.value + ch);\n    if (Number(maxstr) < this.from) return super._appendCharRaw(fromStr[this.value.length], flags);\n    if (Number(minstr) > this.to) {\n      if (!flags.tail && this.autofix === 'pad' && this.value.length + 1 < this.maxLength) {\n        return super._appendCharRaw(fromStr[this.value.length], flags).aggregate(this._appendCharRaw(ch, flags));\n      }\n      return super._appendCharRaw(toStr[this.value.length], flags);\n    }\n    return super._appendCharRaw(ch, flags);\n  }\n  doValidate(flags) {\n    const str = this.value;\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n    const [minstr, maxstr] = this.boundaries(str);\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to && super.doValidate(flags);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    if (this.value.length === this.maxLength) return details;\n    const value = this.value;\n    const padLength = this.maxLength - this.value.length;\n    if (padLength) {\n      this.reset();\n      for (let i = 0; i < padLength; ++i) {\n        details.aggregate(super._appendCharRaw('0', flags));\n      }\n\n      // append tail\n      value.split('').forEach(ch => this._appendCharRaw(ch));\n    }\n    return details;\n  }\n}\nIMask.MaskedRange = MaskedRange;\n\nexport { MaskedRange as default };\n","import MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\nimport { isString } from '../core/utils.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\nconst DefaultPattern = 'd{.}`m{.}`Y';\n\n// Make format and parse required when pattern is provided\n\n/** Date mask */\nclass MaskedDate extends MaskedPattern {\n  static extractPatternOptions(opts) {\n    const {\n      mask,\n      pattern,\n      ...patternOpts\n    } = opts;\n    return {\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern\n    };\n  }\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n\n  /** Start date */\n\n  /** End date */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super(MaskedDate.extractPatternOptions({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    }));\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      mask,\n      pattern,\n      blocks,\n      ...patternOpts\n    } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    };\n    const patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n    if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to) {\n      patternBlocks.m.from = opts.min.getMonth() + 1;\n      patternBlocks.m.to = opts.max.getMonth() + 1;\n      if (patternBlocks.m.from === patternBlocks.m.to) {\n        patternBlocks.d.from = opts.min.getDate();\n        patternBlocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(patternBlocks, this.blocks, blocks);\n    super._update({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n      blocks: patternBlocks\n    });\n  }\n  doValidate(flags) {\n    const date = this.date;\n    return super.doValidate(flags) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist(str) {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date() {\n    return this.typedValue;\n  }\n  set date(date) {\n    this.typedValue = date;\n  }\n  get typedValue() {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue(value) {\n    super.typedValue = value;\n  }\n  maskEquals(mask) {\n    return mask === Date || super.maskEquals(mask);\n  }\n  optionsIsChanged(opts) {\n    return super.optionsIsChanged(MaskedDate.extractPatternOptions(opts));\n  }\n}\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999\n  }\n});\nMaskedDate.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  mask: Date,\n  pattern: DefaultPattern,\n  format: (date, masked) => {\n    if (!date) return '';\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return [day, month, year].join('.');\n  },\n  parse: (str, masked) => {\n    const [day, month, year] = str.split('.').map(Number);\n    return new Date(year, month - 1, day);\n  }\n};\nIMask.MaskedDate = MaskedDate;\n\nexport { MaskedDate as default };\n","import { DIRECTION, objectIncludes } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\n/** Dynamic mask for choosing appropriate mask in run-time */\nclass MaskedDynamic extends Masked {\n  constructor(opts) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n    this.currentMask = undefined;\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    if ('mask' in opts) {\n      this.exposeMask = undefined;\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(m => {\n        const {\n          expose,\n          ...maskOpts\n        } = normalizeOpts(m);\n        const masked = createMask({\n          overwrite: this._overwrite,\n          eager: this._eager,\n          skipInvalid: this._skipInvalid,\n          ...maskOpts\n        });\n        if (expose) this.exposeMask = masked;\n        return masked;\n      }) : [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = this._applyDispatch(ch, flags);\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n    return details;\n  }\n  _applyDispatch(appended, flags, tail) {\n    if (appended === void 0) {\n      appended = '';\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._rawInputValue : inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n    const prevMaskState = prevMask == null ? void 0 : prevMask.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, {\n      ...flags\n    }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n        if (insertValue) {\n          this.currentMask.append(insertValue, {\n            raw: true\n          });\n          details.tailShift = this.currentMask.value.length - prevValueBeforeTail.length;\n        }\n        if (tailValue) {\n          details.tailShift += this.currentMask.append(tailValue, {\n            raw: true,\n            tail: true\n          }).tailShift;\n        }\n      } else if (prevMaskState) {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n    return details;\n  }\n  _appendPlaceholder() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n    return details;\n  }\n  _appendEager() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n    return details;\n  }\n  appendTail(tail) {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n    return details.aggregate(this.currentMask ? this.currentMask.appendTail(tail) : super.appendTail(tail));\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n    return {\n      ...flags,\n      _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\n    };\n  }\n  doDispatch(appended, flags, tail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    return this.dispatch(appended, this, flags, tail);\n  }\n  doValidate(flags) {\n    return super.doValidate(flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n  }\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepare(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepareChar(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  reset() {\n    var _this$currentMask;\n    (_this$currentMask = this.currentMask) == null || _this$currentMask.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n  get value() {\n    return this.exposeMask ? this.exposeMask.value : this.currentMask ? this.currentMask.value : '';\n  }\n  set value(value) {\n    if (this.exposeMask) {\n      this.exposeMask.value = value;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.value = value;\n  }\n  get unmaskedValue() {\n    return this.exposeMask ? this.exposeMask.unmaskedValue : this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.unmaskedValue = unmaskedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.exposeMask ? this.exposeMask.typedValue : this.currentMask ? this.currentMask.typedValue : '';\n  }\n  set typedValue(typedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.typedValue = typedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n      return;\n    }\n    let unmaskedValue = String(typedValue);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = typedValue;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n  get displayValue() {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n  get isComplete() {\n    var _this$currentMask2;\n    return Boolean((_this$currentMask2 = this.currentMask) == null ? void 0 : _this$currentMask2.isComplete);\n  }\n  get isFilled() {\n    var _this$currentMask3;\n    return Boolean((_this$currentMask3 = this.currentMask) == null ? void 0 : _this$currentMask3.isFilled);\n  }\n  remove(fromPos, toPos) {\n    const details = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(fromPos, toPos))\n      // update with dispatch\n      .aggregate(this._applyDispatch());\n    }\n    return details;\n  }\n  get state() {\n    var _this$currentMask4;\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: (_this$currentMask4 = this.currentMask) == null ? void 0 : _this$currentMask4.state\n    };\n  }\n  set state(state) {\n    const {\n      compiledMasks,\n      currentMaskRef,\n      currentMask,\n      ...maskedState\n    } = state;\n    if (compiledMasks) this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n  extractInput(fromPos, toPos, flags) {\n    return this.currentMask ? this.currentMask.extractInput(fromPos, toPos, flags) : '';\n  }\n  extractTail(fromPos, toPos) {\n    return this.currentMask ? this.currentMask.extractTail(fromPos, toPos) : super.extractTail(fromPos, toPos);\n  }\n  doCommit() {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n  nearestInputPos(cursorPos, direction) {\n    return this.currentMask ? this.currentMask.nearestInputPos(cursorPos, direction) : super.nearestInputPos(cursorPos, direction);\n  }\n  get overwrite() {\n    return this.currentMask ? this.currentMask.overwrite : this._overwrite;\n  }\n  set overwrite(overwrite) {\n    this._overwrite = overwrite;\n  }\n  get eager() {\n    return this.currentMask ? this.currentMask.eager : this._eager;\n  }\n  set eager(eager) {\n    this._eager = eager;\n  }\n  get skipInvalid() {\n    return this.currentMask ? this.currentMask.skipInvalid : this._skipInvalid;\n  }\n  set skipInvalid(skipInvalid) {\n    this._skipInvalid = skipInvalid;\n  }\n  get autofix() {\n    return this.currentMask ? this.currentMask.autofix : this._autofix;\n  }\n  set autofix(autofix) {\n    this._autofix = autofix;\n  }\n  maskEquals(mask) {\n    return Array.isArray(mask) ? this.compiledMasks.every((m, mi) => {\n      if (!mask[mi]) return;\n      const {\n        mask: oldMask,\n        ...restOpts\n      } = mask[mi];\n      return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n    }) : super.maskEquals(mask);\n  }\n  typedValueEquals(value) {\n    var _this$currentMask5;\n    return Boolean((_this$currentMask5 = this.currentMask) == null ? void 0 : _this$currentMask5.typedValueEquals(value));\n  }\n}\n/** Currently chosen mask */\n/** Currently chosen mask */\n/** Compliled {@link Masked} options */\n/** Chooses {@link Masked} depending on input value */\nMaskedDynamic.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.displayValue.length : m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT);\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, {\n          raw: true\n        });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(0, Math.max(startInputPos, m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT)))\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\n\nexport { MaskedDynamic as default };\n","import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { DIRECTION } from '../core/utils.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport './base.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  constructor(opts) {\n    super({\n      ...MaskedEnum.DEFAULTS,\n      ...opts\n    }); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: enum_,\n      ...eopts\n    } = opts;\n    if (enum_) {\n      const lengths = enum_.map(e => e.length);\n      const requiredLength = Math.min(...lengths);\n      const optionalLength = Math.max(...lengths) - requiredLength;\n      eopts.mask = '*'.repeat(requiredLength);\n      if (optionalLength) eopts.mask += '[' + '*'.repeat(optionalLength) + ']';\n      this.enum = enum_;\n    }\n    super._update(eopts);\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const matchFrom = Math.min(this.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    const matches = this.enum.filter(e => this.matchValue(e, this.unmaskedValue + ch, matchFrom));\n    if (matches.length) {\n      if (matches.length === 1) {\n        this._forEachBlocksInRange(0, this.value.length, (b, bi) => {\n          const mch = matches[0][bi];\n          if (bi >= this.value.length || mch === b.value) return;\n          b.reset();\n          b._appendChar(mch, flags);\n        });\n      }\n      const d = super._appendCharRaw(matches[0][this.value.length], flags);\n      if (matches.length === 1) {\n        matches[0].slice(this.unmaskedValue.length).split('').forEach(mch => d.aggregate(super._appendCharRaw(mch)));\n      }\n      return d;\n    }\n    return new ChangeDetails({\n      skip: !this.isComplete\n    });\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    // just drop tail\n    return new ContinuousTailDetails('', fromPos);\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (fromPos === toPos) return new ChangeDetails();\n    const matchFrom = Math.min(super.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    let pos;\n    for (pos = fromPos; pos >= 0; --pos) {\n      const matches = this.enum.filter(e => this.matchValue(e, this.value.slice(matchFrom, pos), matchFrom));\n      if (matches.length > 1) break;\n    }\n    const details = super.remove(pos, toPos);\n    details.tailShift += pos - fromPos;\n    return details;\n  }\n  get isComplete() {\n    return this.enum.indexOf(this.value) >= 0;\n  }\n}\n/** Match enum value */\nMaskedEnum.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  matchValue: (estr, istr, matchFrom) => estr.indexOf(istr, matchFrom) === matchFrom\n};\nIMask.MaskedEnum = MaskedEnum;\n\nexport { MaskedEnum as default };\n","import { escapeRegExp, DIRECTION } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\nvar _MaskedNumber;\n/** Number mask */\nclass MaskedNumber extends Masked {\n  /** Single char */\n\n  /** Single char */\n\n  /** Array of single chars */\n\n  /** */\n\n  /** */\n\n  /** Digits after point */\n\n  /** Flag to remove leading and trailing zeros in the end of editing */\n\n  /** Flag to pad trailing zeros after point in the end of editing */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n  _updateRegExps() {\n    const start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    const mid = '\\\\d*';\n    const end = (this.scale ? \"(\" + escapeRegExp(this.radix) + \"\\\\d{0,\" + this.scale + \"})?\" : '') + '$';\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(\"[\" + this.mapToRadix.map(escapeRegExp).join('') + \"]\", 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n  _removeThousandsSeparators(value) {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n  _insertThousandsSeparators(value) {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const [prepCh, details] = super.doPrepareChar(this._removeThousandsSeparators(this.scale && this.mapToRadix.length && (\n    /*\n      radix should be mapped when\n      1) input is done from keyboard = flags.input && flags.raw\n      2) unmasked value is set = !flags.input && !flags.raw\n      and should not be mapped when\n      1) value is set = flags.input && !flags.raw\n      2) raw value is set = !flags.input && flags.raw\n    */\n    flags.input && flags.raw || !flags.input && !flags.raw) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch), flags);\n    if (ch && !prepCh) details.skip = true;\n    if (prepCh && !this.allowPositive && !this.value && prepCh !== '-') details.aggregate(this._appendChar('-'));\n    return [prepCh, details];\n  }\n  _separatorsCount(to, extendOnSeparators) {\n    if (extendOnSeparators === void 0) {\n      extendOnSeparators = false;\n    }\n    let count = 0;\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n    return count;\n  }\n  _separatorsCountFromSlice(slice) {\n    if (slice === void 0) {\n      slice = this._value;\n    }\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n    const oldValue = this._value;\n    this._value += ch;\n    const num = this.number;\n    let accepted = !isNaN(num);\n    let skip = false;\n    if (accepted) {\n      let fixedNum;\n      if (this.min != null && this.min < 0 && this.number < this.min) fixedNum = this.min;\n      if (this.max != null && this.max > 0 && this.number > this.max) fixedNum = this.max;\n      if (fixedNum != null) {\n        if (this.autofix) {\n          this._value = this.format(fixedNum, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n          skip || (skip = oldValue === this._value && !flags.tail); // if not changed on tail it's still ok to proceed\n        } else {\n          accepted = false;\n        }\n      }\n      accepted && (accepted = Boolean(this._value.match(this._numberRegExp)));\n    }\n    let appendDetails;\n    if (!accepted) {\n      this._value = oldValue;\n      appendDetails = new ChangeDetails();\n    } else {\n      appendDetails = new ChangeDetails({\n        inserted: this._value.slice(oldValue.length),\n        rawInserted: skip ? '' : ch,\n        skip\n      });\n    }\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    return appendDetails;\n  }\n  _findSeparatorAround(pos) {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n    return -1;\n  }\n  _adjustRangeWithSeparators(from, to) {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\n    });\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (!this.thousandsSeparator) return cursorPos;\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        {\n          const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n          if (separatorAtLeftPos >= 0) {\n            const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n            if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {\n              return separatorAtLeftPos;\n            }\n          }\n          break;\n        }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        {\n          const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n          if (separatorAtRightPos >= 0) {\n            return separatorAtRightPos + this.thousandsSeparator.length;\n          }\n        }\n    }\n    return cursorPos;\n  }\n  doCommit() {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n      if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n      let formatted = this.value;\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n      this._value = formatted;\n    }\n    super.doCommit();\n  }\n  _normalizeZeros(value) {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\n      if (!parts[1].length) parts.length = 1; // remove fractional\n    }\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n  _padFractionalZeros(value) {\n    if (!value) return value;\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (ch === this.radix || ch === MaskedNumber.UNMASKED_RADIX || this.mapToRadix.includes(ch));\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n  get unmaskedValue() {\n    return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n  set unmaskedValue(unmaskedValue) {\n    super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.parse(this.unmaskedValue, this);\n  }\n  set typedValue(n) {\n    this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number() {\n    return this.typedValue;\n  }\n  set number(number) {\n    this.typedValue = number;\n  }\n  get allowNegative() {\n    return this.min != null && this.min < 0 || this.max != null && this.max < 0;\n  }\n  get allowPositive() {\n    return this.min != null && this.min > 0 || this.max != null && this.max > 0;\n  }\n  typedValueEquals(value) {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (super.typedValueEquals(value) || MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)) && !(value === 0 && this.value === '');\n  }\n}\n_MaskedNumber = MaskedNumber;\nMaskedNumber.UNMASKED_RADIX = '.';\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\nMaskedNumber.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  mask: Number,\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: [_MaskedNumber.UNMASKED_RADIX],\n  min: Number.MIN_SAFE_INTEGER,\n  max: Number.MAX_SAFE_INTEGER,\n  scale: 2,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n  parse: Number,\n  format: n => n.toLocaleString('en-US', {\n    useGrouping: false,\n    maximumFractionDigits: 20\n  })\n};\nIMask.MaskedNumber = MaskedNumber;\n\nexport { MaskedNumber as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by custom Function */\nclass MaskedFunction extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update({\n      ...opts,\n      validate: opts.mask\n    });\n  }\n}\nIMask.MaskedFunction = MaskedFunction;\n\nexport { MaskedFunction as default };\n","import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n\n/** Mask pipe source and destination types */\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n\nexport { PIPE_TYPE, createPipe, pipe };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern mask */\nclass RepeatBlock extends MaskedPattern {\n  get repeatFrom() {\n    var _ref;\n    return (_ref = Array.isArray(this.repeat) ? this.repeat[0] : this.repeat === Infinity ? 0 : this.repeat) != null ? _ref : 0;\n  }\n  get repeatTo() {\n    var _ref2;\n    return (_ref2 = Array.isArray(this.repeat) ? this.repeat[1] : this.repeat) != null ? _ref2 : Infinity;\n  }\n  constructor(opts) {\n    super(opts);\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    var _ref3, _ref4, _this$_blocks;\n    const {\n      repeat,\n      ...blockOpts\n    } = normalizeOpts(opts); // TODO type\n    this._blockOpts = Object.assign({}, this._blockOpts, blockOpts);\n    const block = createMask(this._blockOpts);\n    this.repeat = (_ref3 = (_ref4 = repeat != null ? repeat : block.repeat) != null ? _ref4 : this.repeat) != null ? _ref3 : Infinity; // TODO type\n\n    super._update({\n      mask: 'm'.repeat(Math.max(this.repeatTo === Infinity && ((_this$_blocks = this._blocks) == null ? void 0 : _this$_blocks.length) || 0, this.repeatFrom)),\n      blocks: {\n        m: block\n      },\n      eager: block.eager,\n      overwrite: block.overwrite,\n      skipInvalid: block.skipInvalid,\n      lazy: block.lazy,\n      placeholderChar: block.placeholderChar,\n      displayChar: block.displayChar\n    });\n  }\n  _allocateBlock(bi) {\n    if (bi < this._blocks.length) return this._blocks[bi];\n    if (this.repeatTo === Infinity || this._blocks.length < this.repeatTo) {\n      this._blocks.push(createMask(this._blockOpts));\n      this.mask += 'm';\n      return this._blocks[this._blocks.length - 1];\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = new ChangeDetails();\n    for (let bi = (_this$_mapPosToBlock$ = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index) != null ? _this$_mapPosToBlock$ : Math.max(this._blocks.length - 1, 0), block, allocated;\n    // try to get a block or\n    // try to allocate a new block if not allocated already\n    block = (_this$_blocks$bi = this._blocks[bi]) != null ? _this$_blocks$bi : allocated = !allocated && this._allocateBlock(bi); ++bi) {\n      var _this$_mapPosToBlock$, _this$_mapPosToBlock, _this$_blocks$bi, _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      if (blockDetails.skip && allocated) {\n        // remove the last allocated block and break\n        this._blocks.pop();\n        this.mask = this.mask.slice(1);\n        break;\n      }\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  _trimEmptyTail(fromPos, toPos) {\n    var _this$_mapPosToBlock2, _this$_mapPosToBlock3;\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    const firstBlockIndex = Math.max(((_this$_mapPosToBlock2 = this._mapPosToBlock(fromPos)) == null ? void 0 : _this$_mapPosToBlock2.index) || 0, this.repeatFrom, 0);\n    let lastBlockIndex;\n    if (toPos != null) lastBlockIndex = (_this$_mapPosToBlock3 = this._mapPosToBlock(toPos)) == null ? void 0 : _this$_mapPosToBlock3.index;\n    if (lastBlockIndex == null) lastBlockIndex = this._blocks.length - 1;\n    let removeCount = 0;\n    for (let blockIndex = lastBlockIndex; firstBlockIndex <= blockIndex; --blockIndex, ++removeCount) {\n      if (this._blocks[blockIndex].unmaskedValue) break;\n    }\n    if (removeCount) {\n      this._blocks.splice(lastBlockIndex - removeCount + 1, removeCount);\n      this.mask = this.mask.slice(removeCount);\n    }\n  }\n  reset() {\n    super.reset();\n    this._trimEmptyTail();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._trimEmptyTail(fromPos, toPos);\n    return removeDetails;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos == null && this.repeatTo === Infinity) return Infinity;\n    return super.totalInputPositions(fromPos, toPos);\n  }\n  get state() {\n    return super.state;\n  }\n  set state(state) {\n    this._blocks.length = state._blocks.length;\n    this.mask = this.mask.slice(0, this._blocks.length);\n    super.state = state;\n  }\n}\nIMask.RepeatBlock = RepeatBlock;\n\nexport { RepeatBlock as default };\n","export { default as InputMask } from './controls/input.js';\nimport IMask from './core/holder.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { default as HTMLInputMaskElement } from './controls/html-input-mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as ChangeDetails } from './core/change-details.js';\nexport { DIRECTION, forceDirection } from './core/utils.js';\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as createMask, normalizeOpts } from './masked/factory.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as ChunksTailDetails } from './masked/pattern/chunk-tail-details.js';\nexport { default as PatternFixedDefinition } from './masked/pattern/fixed-definition.js';\nexport { default as PatternInputDefinition } from './masked/pattern/input-definition.js';\nexport { PIPE_TYPE, createPipe, pipe } from './masked/pipe.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as RepeatBlock } from './masked/repeat.js';\nimport './core/action-details.js';\nimport './controls/input-history.js';\nimport './core/continuous-tail-details.js';\nimport './masked/pattern/cursor.js';\n\ntry {\n  globalThis.IMask = IMask;\n} catch {}\n\nexport { IMask as default };\n","const pad = s => {\n  s = `00${s}`.slice(-2);\n  return `<span>${s[0]}</span><span>${s[1]}</span>`;\n};\n\nconst update = () => {\n  const now = new Date();\n  let finish = new Date();\n  finish.setHours(23, 59, 59, 999);\n\n  if (now.getHours() === 23 && now.getMinutes() === 59 && now.getSeconds() === 59) {\n      finish.setDate(finish.getDate() + 1);\n  }\n\n  let sec = Math.floor((finish.getTime() - now.getTime()) / 1000);\n  const hrs = Math.floor(sec / 3600);\n  sec -= hrs * 3600;\n  const min = Math.floor(sec / 60);\n  sec -= min * 60;\n\n  document.querySelectorAll(\".timer\").forEach(timer => {\n      timer.querySelector(\".hours\").innerHTML = pad(hrs);\n      timer.querySelector(\".minutes\").innerHTML = pad(min);\n      timer.querySelector(\".seconds\").innerHTML = pad(sec);\n  });\n\n  setTimeout(update, 200);\n};\n\nupdate();\n\n\nexport default update\n\n\n","import IMask from 'imask';\n\nfunction phoneMask() {\n  const phoneInput = document.getElementById('phone');\n\n  const mask = new IMask(phoneInput, {\n    mask: '+38(000)000-00-00',\n  });\n}\n\nphoneMask();\n\nexport default phoneMask;\n","const handleFormSubmit = async event => {\n  event.stopPropagation();\n  event.preventDefault();\n\n  const form = event.target;\n  const submit = form.querySelector('.submit');\n  const data = new FormData();\n  const files = form.querySelectorAll('input[type=file]');\n\n  // Генерация уникального номера заказа\n  const orderNumber = '_' + Date.now();\n  const name = form.querySelector('[name=\"name\"]').value;\n\n  // submit.value = 'Отправка...';\n  form\n    .querySelectorAll('input, textarea')\n    .forEach(input => input.setAttribute('disabled', ''));\n\n  data.append('Имя', form.querySelector('[name=\"name\"]').value);\n  data.append('Телефон', form.querySelector('[name=\"phone\"]').value);\n  data.append('Количество', form.querySelector('[name=\"quantity\"]').value);\n\n  // Добавляем номер заказа в FormData\n  data.append('Номер заказа', orderNumber);\n\n  files.forEach(file => {\n    Array.from(file.files).forEach(value => {\n      data.append(file.name, value);\n    });\n  });\n\n\n\n  try {\n    const response = await fetch('../php-middleware.php', {\n      method: 'POST',\n      body: data,\n      cache: 'no-cache',\n    });\n\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    const result = await response.json();\n\n    // Перенаправляем на страницу thanks.html с номером заказа\n    window.location.href = `thanks.html?order_number=${encodeURIComponent(\n      orderNumber\n    )}&name=${encodeURIComponent(name)}`;\n  } catch (error) {\n    console.error('Error: ' + error.message);\n  } finally {\n    console.log('Complete');\n    form.reset();\n  }\n};\n\n// Добавим слушатель события submit к форме\ndocument.addEventListener('DOMContentLoaded', () => {\n  const telegramForm = document.querySelector('.telegram-form');\n  if (telegramForm) {\n    telegramForm.addEventListener('submit', handleFormSubmit);\n  }\n});\n\n\nexport default handleFormSubmit","import IMask from 'imask';\nimport timer from './js/timer';\nimport validateOrderForm from './js/validateOrderForm';\nimport inputPhoneMask from './js/inputPhoneMask';\nimport handleFormSubmit from './js/formHandler';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  validateOrderForm();\n});\n\nconst mySlider = new Splide('#slider', {\n  type: 'loop',\n  focus: 'center',\n  drug: 'free',\n  autoScroll: {\n    speed: 1,\n  },\n\n  autoStart: true,\n});\n\nmySlider.mount(window.splide.Extensions);\n// mySlider.mount();\n"," function validateOrderForm() {\n  document.querySelectorAll('.order_form').forEach(form => {\n    form.addEventListener('submit', event => {\n      const nameInput = form.querySelector(\"input[name='name']\");\n      const phoneInput = form.querySelector(\"input[name='phone']\");\n\n      if (!nameInput.value && !phoneInput.value) {\n        alert('Введите Ваши имя и телефон');\n        nameInput.focus();\n        event.preventDefault();\n      } else if (!nameInput.value) {\n        alert('Введите Ваше имя');\n        nameInput.focus();\n        event.preventDefault();\n      } else if (!phoneInput.value) {\n        alert('Введите Ваш телефон');\n        phoneInput.focus();\n        event.preventDefault();\n      }\n    });\n  });\n}\n\nexport default validateOrderForm"],"names":["$7f8f9e4cb1731024$export$2e2bcd8739ae039","el","opts","InputMask","$b9f82b1f38a24931$export$844ec244b1367d54","str","String","$b9f82b1f38a24931$export$a6cdc56e425d0d0a","obj","_obj$constructor","constructor","name","$b9f82b1f38a24931$export$357523c63a2253b9","keys","Array","isArray","_","k","includes","Object","entries","reduce","acc","_ref","v","$b9f82b1f38a24931$export$9106728c49045482","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","$b9f82b1f38a24931$export$32af4dafed14c8ce","direction","$b9f82b1f38a24931$export$7c57da42ce8e346f","replace","$b9f82b1f38a24931$export$7aeb68f71172641d","b","a","arrA","arrB","i","length","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","prototype","hasOwnProperty","call","$6d3a752202397b67$export$2e2bcd8739ae039","startChangePos","Math","min","this","cursorPos","oldSelection","start","insertedCount","inserted","value","substr","removedCount","max","end","oldValue","removed","head","substring","tail","removeDirection","assign","slice","$4679688fec8214a0$export$2e2bcd8739ae039","currentState","states","currentIndex","isEmpty","push","state","MAX_LENGTH","shift","go","steps","undo","redo","clear","$81952e4a4da5ff65$export$2e2bcd8739ae039","extend","appendTo","masked","append","aggregate","_appendPlaceholder","from","stop","unshift","beforePos","shiftChar","$9a02baa154032bcf$export$2e2bcd8739ae039","block","_blocks","index","pos","_blockStartPos","offset","ok","s","pushState","_log","popState","pop","bindBlock","displayValue","_pushLeft","fn","_this$block","_pushRight","pushLeftBeforeFilled","isFixed","nearestInputPos","pushLeftBeforeInput","pushLeftBeforeRequired","isOptional","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","_mapPosToBlock","$9b2a7934382d129f$export$81ad4b1539a22420","mask","Error","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Masked","Function","MaskedFunction","console","warn","$9b2a7934382d129f$export$a213ae1c699d7230","instanceOpts","_mask","startsWith","$9b2a7934382d129f$export$2e2bcd8739ae039","nOpts","MaskedClass","createMask","$600250ccf0419caa$export$2e2bcd8739ae039","selectionStart","_unsafeSelectionStart","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","MaskElement","$910b09fe2b01933a$export$2e2bcd8739ae039","rootElement","_this$input$getRootNo","_this$input$getRootNo2","_this$input","input","getRootNode","document","activeElement","bindEvents","handlers","addEventListener","_onKeydown","_onInput","_onBeforeinput","_onCompositionEnd","drop","click","focus","commit","_handlers","e","keyCode","shiftKey","metaKey","ctrlKey","preventDefault","isComposing","selectionChange","inputType","unbindEvents","removeEventListener","super","bind","HTMLMaskElement","$26232c39b47ea1e1$export$2e2bcd8739ae039","setSelectionRange","$1102251dbd92a30c$export$2e2bcd8739ae039","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","HTMLContenteditableMaskElement","maskEquals","_this$masked","updateOptions","unmaskedValue","_value","updateControl","_unmaskedValue","rawInputValue","_rawInputValue","alignCursor","typedValue","val","typedValueEquals","_bindEvents","_saveSelection","_onDrop","_onClick","_onFocus","_onChange","_onUndo","_onRedo","_unbindEvents","_fireEvent","ev","listeners","_listeners","forEach","l","_cursorChanging","_changingCursorPos","_selection","updateValue","newUnmaskedValue","newValue","newRawInputValue","newDisplayValue","isChanged","_fireChangeEvents","_historyChanging","history","restOpts","updateMask","updateOpts","optionsIsChanged","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","isComplete","clearTimeout","alignCursorFriendly","on","handler","off","hIndex","indexOf","splice","details","oldRawValue","raw","doCommit","stopPropagation","_applyHistoryState","destroy","isContentEditable","tagName","$bd3b02e030d373d5$export$2e2bcd8739ae039","static","prep","rawInserted","tailShift","skip","consumed","Boolean","equals","ChangeDetails","$18a6c62942791a59$export$2e2bcd8739ae039","withValueRefresh","_update","reset","resolve","flags","parse","format","extractInput","isFilled","totalInputPositions","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","checkTail","consistentState","doPrepareChar","autofix","noFixState","fixDetails","pad","chDetails","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","_beforeTailState","doPrepare","ci","d","doSkipInvalid","eager","remove","_refreshing","_initialized","rawInput","ret","runIsolated","_isolated","skipInvalid","normalize","prepare","prepareChar","validate","parent","deleteCount","tailPos","eagerRemove","valLength","tval","EMPTY_VALUES","DEFAULTS","undefined","$987e1259c87a2a38$export$2e2bcd8739ae039","chunks","map","join","tailChunk","lastChunk","extendLast","firstTailChunk","blockIndex","chunk","lastBlockIter","chunkBlock","_stops","remainChars","c","props","cstate","chunkShiftPos","$1fb2c7b048288f37$export$2e2bcd8739ae039","isUnmasking","_isRawInput","maxPos","appendEager","isResolved","char","$82a2e1550ae7feb1$export$2e2bcd8739ae039","placeholderChar","displayChar","currentMaskFlags","lazy","boundPos","_flags$_beforeTailSta","maskOpts","DEFAULT_DEFINITIONS","search","$a593d1cc05cf62bc$export$2e2bcd8739ae039","definitions","_rebuildMask","defs","exposeBlock","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","sort","bName1","expose","repeat","bOpts","blockOpts","maskedBlock","RepeatBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","bi","every","_this$_mapPosToBlock","startBlockIndex","blockIter","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","fromPos1","toPos1","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","_blocks2","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","total","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","$1fecf9d7bab406f0$export$2e2bcd8739ae039","_matchFrom","maxLength","to","patternOpts","fromStr","padStart","toStr","sameCharsCount","boundaries","minstr","maxstr","placeholder","num","match","padEnd","padLength","split","MaskedRange","$dc338e4b295b7779$export$2e2bcd8739ae039","patternBlocks","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","date","isDateExist","extractPatternOptions","day","month","year","$7d499f714d762607$export$2e2bcd8739ae039","exposeMask","compiledMasks","_overwrite","_eager","_skipInvalid","_applyDispatch","currentMask","prevValueBeforeTail","inputValue","insertValue","tailValue","prevMask","prevMaskState","doDispatch","_flags$_beforeTailSta2","currentMaskRef","dispatch","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","mi","_autofix","oldMask","_this$currentMask5","inputs","isCurrent","startInputPos","weight","i1","i2","$dbfc6b8537866c86$export$2e2bcd8739ae039","enum","enum_","eopts","lengths","requiredLength","optionalLength","matchFrom","matches","matchValue","mch","estr","istr","MaskedEnum","$8a2fcbb913c2ebd8$var$_MaskedNumber","$8a2fcbb913c2ebd8$export$2e2bcd8739ae039","_updateRegExps","allowNegative","scale","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","allowPositive","_separatorsCount","extendOnSeparators","count","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","number","appendDetails","accepted","isNaN","fixedNum","UNMASKED_RADIX","beforeTailValue","beforeTailSeparatorsCount","_findSeparatorAround","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","test","dropFractional","n","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","toLocaleString","useGrouping","maximumFractionDigits","$e50cd5fa4d277691$export$90dab59c3d4b6e03","MASKED","UNMASKED","TYPED","$e50cd5fa4d277691$export$a504d53a5b99e1b9","arg","PIPE_TYPE","createPipe","pipe","repeatFrom","Infinity","repeatTo","_ref2","_ref3","_ref4","_this$_blocks","_blockOpts","_allocateBlock","allocated","_this$_mapPosToBlock$","_this$_blocks$bi","_trimEmptyTail","_this$_mapPosToBlock2","_this$_mapPosToBlock3","firstBlockIndex","lastBlockIndex","removeCount","globalThis","IMask","$7e81353768b819eb$var$pad","$7e81353768b819eb$var$update","now","finish","setHours","getHours","getMinutes","getSeconds","setDate","sec","floor","hrs","querySelectorAll","timer","querySelector","innerHTML","$a8ec440c4108c458$var$phoneMask","getElementById","$8f64199ab29bf411$var$handleFormSubmit","async","event","form","target","data","FormData","files","orderNumber","setAttribute","file","response","fetch","method","body","cache","json","window","location","href","encodeURIComponent","error","message","log","telegramForm","nameInput","phoneInput","alert","Splide","type","drug","autoScroll","speed","autoStart","mount","splide","Extensions"],"version":3,"file":"index.29c97c25.js.map"}